{
  "root": true,
  "env": {
    "browser": true,
    "es2022": true,
    "node": true
  },
  "extends": [
    "eslint:all",
    "next/core-web-vitals",
    "prettier",
    "plugin:eslint-comments/recommended",
    "plugin:react/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint", "kritjo-lightapp"],
  "rules": {
    "sort-imports": "off", // this is handled by Prettier
    "no-console": ["error", { "allow": ["error"] }],
    "new-cap": "off",
    "one-var": "off",
    "sort-keys": "off",
    "id-length": ["error", { "exceptionPatterns": ["^_"] }],
    "eslint-comments/require-description": "error",
    "react/prefer-read-only-props": "error",
    "react/jsx-uses-react": "off",
    "react/react-in-jsx-scope": "off"
  },
  "overrides": [
    {
      "files": ["actions/**/*"],
      "rules": {
        "kritjo-lightapp/use-server": "error"
      }
    },
    {
      "files": ["server/**/*"],
      "rules": {
        "kritjo-lightapp/server-only": "error"
      }
    },
    {
      "files": [
        ".next/types/**/*.ts",
        "actions/**/*.ts",
        "app/**/*.ts",
        "components/**/*.ts",
        "db/**/*.ts",
        "server/**/*.ts",
        "types/**/*.tsx",
        "actions/**/*.tsx",
        "app/**/*.tsx",
        "components/**/*.ts",
        "db/**/*.tsx",
        "server/**/*.tsx",
        "types/**/*.tsx"
      ], // Your TypeScript files extension

      "extends": ["plugin:@typescript-eslint/all"],
      "parserOptions": {
        "project": ["./tsconfig.json"] // Specify it only for TypeScript files
      },
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "error",
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": ["camelCase"]
          },
          {
            "selector": "typeParameter",
            "format": ["PascalCase"],
            "prefix": ["T"]
          },
          {
            "selector": "interface",
            "format": ["PascalCase"]
          },
          {
            "selector": "function",
            "modifiers": ["exported", "global"],
            "format": ["camelCase", "PascalCase"]
          },
          {
            "selector": "default",
            "modifiers": ["unused"],
            "format": ["camelCase"],
            "leadingUnderscore": "require"
          }
        ],
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_",
            "destructuredArrayIgnorePattern": "^_",
            "varsIgnorePattern": "^_"
          }
        ], // This rule is handled by naming-convention
        "no-underscore-dangle": "off", // This rule is handled by naming-convention
        "camelcase": "off", // This rule is handled by naming-convention
        "@typescript-eslint/no-base-to-string": "error",
        "@typescript-eslint/prefer-readonly-parameter-types": "error",
        "kritjo-lightapp/tsx-element-pascal-case": "error",
        "kritjo-lightapp/tsx-props-no-spreading": "error",
        "kritjo-lightapp/tsx-element-return-type": "error",
        "@typescript-eslint/consistent-type-imports": "error",
        "@typescript-eslint/no-confusing-void-expression": "error",
        "@typescript-eslint/use-unknown-in-catch-callback-variable": "error",
        "@typescript-eslint/no-unsafe-member-access": "error"
      }
    },
    {
      "files": ["**/*.tsx"],
      "rules": {
        "@typescript-eslint/prefer-readonly-parameter-types": "off"
      }
    }
  ]
}
