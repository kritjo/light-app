{
  "root": true,
  "env": {
    "browser": true,
    "es2022": true,
    "node": true
  },
  "extends": ["eslint:all", "next/core-web-vitals", "prettier"],
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint"],
  "rules": {
    "sort-imports": "off", // this is handled by Prettier
    "no-console": ["error", { "allow": ["error"] }],
    "new-cap": "off",
    "one-var": "off",
    "sort-keys": "off",
    "id-length": ["error", { "exceptionPatterns": ["^_"] }]
  },
  "overrides": [
    {
      "files": ["server/**/*"],
      "rules": {
        "use-server": "error"
      }
    },
    {
      "files": [".next/types/**/*.ts",
        "app/**/*.ts", "components/**/*.ts", "db/**/*.ts", "server/**/*.ts", "types/**/*.tsx",
        "app/**/*.tsx", "components/**/*.ts", "db/**/*.tsx", "server/**/*.tsx", "types/**/*.tsx"], // Your TypeScript files extension

      "extends": [
        "plugin:@typescript-eslint/all"
      ],
      "parserOptions": {
        "project": ["./tsconfig.json"] // Specify it only for TypeScript files
      },
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "error",
        "@typescript-eslint/naming-convention": ["error", {
          "selector": "default",
          "format": ["camelCase"]
        }, {
          "selector": "typeParameter",
          "format": ["PascalCase"],
          "prefix": ["T"]
        }, {
          "selector": "interface",
          "format": ["PascalCase"]
        }, {
            "selector": "function",
            "modifiers": ["exported", "global"],
            "format": ["camelCase", "PascalCase"]
        }],
        "@typescript-eslint/no-base-to-string": "error",
        "@typescript-eslint/prefer-readonly-parameter-types": "error",
        "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }]
      }
    }
  ]
}
